{"version":3,"sources":["Components /aac.png","Components /Nav.js","Components /Home.js","Components /History.js","Components /Compression.js","Components /Similar.js","Components /SideBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","to","src","logo","id","alt","Home","Component","History","Compression","Similar","SideBar","href","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,iC,8NCqB5BC,EAjBH,WACR,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,OAAOD,UAAU,cAAa,yBAAKE,IAAKC,IAAMC,GAAG,OAAOC,IAAI,SAArE,OACA,wBAAIL,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,QAAZ,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,gBAAZ,gBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,wBCSTK,E,iLAlBP,OACI,yBAAKN,UAAU,WACX,wBAAIA,UAAU,SAAd,6CACA,yBAAKA,UAAU,aACX,4cAGA,of,GATDO,aCeJC,E,iLAbP,OACI,yBAAKR,UAAU,WACX,wBAAIA,UAAU,SAAd,kBACA,6d,GALMO,aCaPE,E,iLAXP,OACI,yBAAKT,UAAU,WACX,wBAAIA,UAAU,SAAd,eACA,2R,GALUO,aC8BXG,E,iLA5BP,OACI,yBAAKV,UAAU,WACX,wBAAIA,UAAU,SAAd,sDACA,ylBAIA,iUAKA,8TAIA,sUAIA,+Y,GAtBMO,aCiBPI,EAjBC,WAEZ,OACI,yBAAKX,UAAU,WACX,uCACA,4BACI,4BAAI,uBAAGY,KAAK,qBAAR,aACJ,4BAAI,uBAAGA,KAAK,qBAAR,aACJ,4BAAI,uBAAGA,KAAK,qBAAR,aACJ,4BAAI,uBAAGA,KAAK,qBAAR,aACJ,4BAAI,uBAAGA,KAAK,qBAAR,aACJ,4BAAI,uBAAGA,KAAK,qBAAR,gB,QCgBLC,G,uLAfX,OACI,kBAAC,IAAD,KACE,yBAAKb,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOc,KAAK,OAAOC,UAAWT,IAC9B,kBAAC,IAAD,CAAOQ,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,eAAeC,UAAWN,IACtC,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWL,IAClC,kBAAC,EAAD,Y,GAVMH,cCAES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4111da68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aac.823f5f65.png\";","import React from 'react';\nimport {Link,NavLink} from \"react-router-dom\";\nimport logo from './aac.png';\n\nconst Nav = () => {\n    return (\n        <nav className=\"nav-wrapper\">\n            <div className=\"container\">\n                <Link to=\"/aac\" className=\"brand-logo\"><img src={logo} id=\"logo\" alt=\"logo\"/>AAC</Link>\n                <ul className=\"right\">\n                    <li><NavLink to=\"/aac\">Home</NavLink></li>\n                    <li><NavLink to=\"/history\">History</NavLink></li>\n                    <li><NavLink to=\"/compression\">Compression</NavLink></li>\n                    <li><NavLink to=\"/similar\">Similar Formats</NavLink></li>\n                </ul>\n            </div>\n        </nav>\n    )\n\n}\n\nexport default Nav;","import React, { Component } from 'react';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"contain\">\n                <h4 className=\"title\">An Overview of Advanced Audio Codec (AAC)</h4>\n                <div className=\"transform\">\n                    <p>\n                        I used a random word picker and it chose AAC - Advanced Audio Coding. Advanced Audio Coding is a type of music formatter. The files that are in .aac usually contain compressed audio files. There are a few common things this format is used that you probably know and don’t know about. AAC is the default or standard audio format for iPhone, iPod, iPad, Nintendo DSi, Nintendo 3DS, iTunes, DivX Plus Web Player, PlayStation 3.\n                    </p>\n                    <p>\n                        AAC contains audio using lossy compression. There are tons of other sounds so close together, low or high pitches that most people don’t hear. What lossy compression does is cut out those songs close together that we don’t really hear and it makes the file smaller. AAC also makes the bit rate a lot lower but also has higher quality. Most songs that are formatted as AAC have a smaller file format from 7mb up to 12mb depending on how long the song is.\n                    </p>\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass History extends Component {\n    render() {\n        return (\n            <div className=\"contain\">\n                <h4 className=\"title\">Format History</h4>\n                <p>\n                    There were many creators of AAC, the developers are  Bell Labs, Fraunhofer IIS, Dolby Laboratories, LG Electronics, NEC, NTT Docomo, Panasonic, Sony Corporation, ETRI, JVC Kenwood, Philips, Microsoft, and NTT.  AAC was developed during the year of April 1997 and published by the Moving Pictures Expert Groups.\n                    There were a few similar formats around at the time those were mp3 and wma (Windows Media Audio) which came out a few years later.\n                </p>\n\n            </div>\n        );\n    }\n}\n\nexport default History;\n","import React, { Component } from 'react';\n\nclass Compression extends Component {\n    render() {\n        return (\n            <div className=\"contain\">\n                <h4 className=\"title\">Compression</h4>\n                <p>\n                    Deserunt Lorem ea id esse Lorem sit labore non enim amet sunt ut ipsum. Esse officia laborum ipsum in eu. Ipsum ea ea ullamco elit tempor nulla ut culpa sunt non incididunt culpa reprehenderit esse. Consectetur aliquip irure laborum reprehenderit.\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Compression;\n","import React, { Component } from 'react';\n\nclass Similar extends Component {\n    render() {\n        return (\n            <div className=\"contain\">\n                <h4 className=\"title\">Similar Formats and the Advantages / Disadvantages</h4>\n                <p>\n                    Deserunt Lorem ea id esse Lorem sit labore non enim amet sunt ut ipsum. Esse officia laborum ipsum in eu. Ipsum ea ea ullamco elit tempor nulla ut culpa sunt non incididunt culpa reprehenderit esse. Consectetur aliquip irure laborum reprehenderit. Fugiat ad sunt labore exercitation pariatur voluptate ad qui officia dolor aliqua ea eiusmod eu. Qui voluptate non officia quis aute eiusmod consectetur Lorem nisi minim et voluptate. Est non non exercitation eiusmod incididunt et Lorem nostrud proident laborum sint nostrud fugiat. In ea ex dolor occaecat quis cupidatat.\n                </p>\n\n                <p>\n                    Ullamco Lorem ad est et nulla occaecat aliquip nulla esse consectetur consectetur officia nisi. Sunt tempor laborum non quis. Amet minim fugiat in incididunt quis exercitation anim. Esse aliquip quis deserunt sint consequat enim sunt. Officia ad non in id eiusmod consectetur occaecat elit.\n</p>\n\n\n                <p>\n                    Duis qui cupidatat magna eiusmod aute dolor qui pariatur consequat mollit enim cillum non mollit. Quis aliquip eu commodo nostrud quis mollit aliquip dolore exercitation. Dolor irure ea Lorem sit anim in. Anim dolor duis sit veniam enim non enim exercitation eu incididunt fugiat veniam.\n</p>\n\n                <p>\n                    Do reprehenderit dolore incididunt est do ea aute Lorem ad. Nulla eiusmod deserunt dolor labore consectetur proident anim irure amet cillum velit fugiat eiusmod ipsum. Irure velit deserunt laboris exercitation qui consequat. Culpa est proident magna consequat. Consequat id tempor amet sit elit.\n</p>\n\n                <p>\n                    Esse nostrud labore culpa occaecat. Ullamco esse sunt sint ex duis non aliquip aliqua aute sint nulla tempor elit et. Qui voluptate voluptate aute mollit nostrud. Laborum culpa nulla cupidatat sint adipisicing qui anim irure aliquip qui. Incididunt cillum amet magna sunt velit nostrud incididunt laborum dolor mollit laboris consequat. Amet magna do anim labore.\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Similar;\n","import React from 'react'\n\nconst SideBar = () => {\n\n    return(\n        <div className=\"sidebar\">\n            <h6>SOURCES</h6>\n            <ul>\n                <li><a href=\"http://google.com\">Source 1</a></li>\n                <li><a href=\"http://google.com\">Source 1</a></li>\n                <li><a href=\"http://google.com\">Source 1</a></li>\n                <li><a href=\"http://google.com\">Source 1</a></li>\n                <li><a href=\"http://google.com\">Source 1</a></li>\n                <li><a href=\"http://google.com\">Source 1</a></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default SideBar;","import React, { Component } from 'react';\nimport Nav from \"./Components /Nav\";\nimport Home from \"./Components /Home\"\nimport History from \"./Components /History\";\nimport Compression from \"./Components /Compression\";\nimport Similar from \"./Components /Similar\";\nimport SideBar from \"./Components /SideBar\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Nav />\n            <Route path=\"/aac\" component={Home} />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/compression\" component={Compression} />\n            <Route path=\"/similar\" component={Similar} />\n            <SideBar />\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}